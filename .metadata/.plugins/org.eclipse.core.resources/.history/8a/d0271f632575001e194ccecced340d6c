package com.southern.cmps.service.impl;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.itextpdf.text.pdf.PdfReader;
import com.itextpdf.text.pdf.PdfStamper;
import com.southern.cmps.dao.CmpsDao;
import com.southern.cmps.domain.Concentration;
import com.southern.cmps.domain.Student;
import com.southern.cmps.domain.StudentBalanceSheetInfo;
import com.southern.cmps.service.CmpsService;
import com.southern.cmps.service.exception.CmpsException;
import com.southern.cmps.util.UtilValidate;

@Service
public class CmpsServiceImpl implements CmpsService{
	
	@Autowired
	private CmpsDao cmpsDaoImpl;
	
	@Override
	public Student getStudentDetail(String uNumber) throws CmpsException {
		if(UtilValidate.isEmpty(uNumber)) {
			throw new CmpsException("Invalid UNumber");
		}
		Student student = cmpsDaoImpl.getStudentDetail(uNumber);
		if(UtilValidate.isEmpty(student)) {
			throw new CmpsException("Invalid Student Information");
		}
		return student;
	}
	
	@Override
	public Map<Integer, Concentration> getConcentrations() throws CmpsException {
		Map<Integer, Concentration> concentrations = cmpsDaoImpl.getConcentrations();
		if (UtilValidate.isEmpty(concentrations)) {
			throw new CmpsException("Invalid Concentrations");
		}
		return concentrations;
	}
	
	@Override
	public StudentBalanceSheetInfo getStudentBalanceSheetInfo(String uNumber) throws CmpsException {
		Student student = getStudentDetail(uNumber);
		Map<Integer, Concentration> concentrations = getConcentrations();
		StudentBalanceSheetInfo info = new StudentBalanceSheetInfo();
		info.setFirstName(student.getFirstName());
		info.setUNumber(student.getUNumber());
		info.setConcentrationsInfo(concentrations);
		return info;
	}
	
	public static File writeToFile(String templatePath, String templateName, Map<String, String> map, String filePath, String fileName) throws Exception {
		InputStream pdfTemplateInputStream = new FileInputStream("templates/ftl/student-balance-sheet.ftl");
		
		PdfReader pdfTemplate = new PdfReader(pdfTemplateInputStream);
		ByteArrayOutputStream out = new ByteArrayOutputStream();
		PdfStamper stamper = new PdfStamper(pdfTemplate, out);
		stamper.setFormFlattening(true);
		
		for (String key: map.keySet()) {
			stamper.getAcroFields().setField(key, map.get(key));
		}
		
		stamper.close();
		pdfTemplate.close();
		
		File file = new File("conf/Common/Report.pdf");
		FileOutputStream fos = new FileOutputStream(file);
		fos.write(out.toByteArray());
		fos.close();
		
		return file;
	}

}
